{"version":3,"sources":["webpack:///./index.js"],"names":["messageForm","document","forms","list","querySelector","editInput","createMessage","e","preventDefault","message","elements","value","axios","post","response","console","log","data","error","getMessage","reset","addEventListener","id","get","Object","keys","map","markup","reduce","acc","item","innerHTML","deleteMessage","target","dataset","delete","updateMessage","text","patch","button","textContent","classList","toggle","previousElementSibling"],"mappings":"8hBAGA,IAAMA,EAAcC,SAASC,MAAMF,YAC7BG,EAAOF,SAASG,cAAc,SAC9BC,EAAYJ,SAASG,cAAc,cAgBnCE,EAAa,4CAAG,WAAMC,GAAN,+FACpBA,EAAEC,iBACIC,EAAUT,EAAYU,SAASD,QAAQE,MAFzB,kBAKKC,IAAMC,KAC3B,mDACA,CACEJ,QAASA,IARK,OAKZK,EALY,OAWlBC,QAAQC,IAAI,SAAUF,EAASG,MAXb,gDAalBF,QAAQC,IAAIE,OAbM,yBAelBC,IAfkB,qBAmBpBnB,EAAYoB,QAnBQ,+DAAH,sDAsBnBpB,EAAYqB,iBAAiB,SAAUf,GAEvC,IAAMa,EAAU,4CAAG,WAAMG,GAAN,0GACMV,IAAMW,IAC3B,oDAFe,OAIK,QAHhBT,EADW,QAIJG,MACLA,EAAOO,OAAOC,KAAKX,EAASG,MAAMS,KAAI,SAAAJ,GAC1C,sBAASA,MAAOR,EAASG,KAAKK,OAEhCP,QAAQC,IAAIC,GAENU,EAASV,EAAKW,QAAO,SAACC,EAAKC,GAC/B,OAAQD,EAAO,2EAEgBC,EAAKrB,QAFzB,gFAGqDqB,EAAKR,GAH1D,wFAIsDQ,EAAKR,GAJ3D,8CAOV,IACHnB,EAAK4B,UAAYJ,GACZxB,EAAK4B,UAAL,oCApBU,2CAAH,sDAuBVC,EAAa,4CAAG,WAAMzB,GAAN,yFACK,WAArBA,EAAE0B,OAAOC,QADO,wBAEZZ,EAAKf,EAAE0B,OAAOC,QAAQZ,GAFV,kBAIVV,IAAMuB,OAAN,+CAC2Cb,EAD3C,SAJU,OAOhBP,QAAQC,IAAIF,SAASG,MAPL,gDAShBF,QAAQC,IAAR,MATgB,yBAWhBG,IAXgB,4EAAH,sDAgBbiB,EAAa,4CAAG,WAAOd,EAAIe,GAAX,6FACd5B,EAAUJ,EAAUM,MADN,kBAIZC,IAAM0B,MAAN,+CAC2ChB,EAD3C,QAEJ,CAAEb,YANc,sDASlBM,QAAQC,IAAR,MATkB,uBAWlBG,IACAd,EAAUM,MAAQ,GAZA,0EAAH,wDAiCnBQ,IACAhB,EAAKkB,iBAAiB,SAlBN,SAAAd,GACkB,WAA5BA,EAAE0B,OAAOC,QAAQK,QACnBP,EAAczB,EAAE0B,OAAOC,QAAQZ,IAED,SAA5Bf,EAAE0B,OAAOC,QAAQK,SACU,SAAzBhC,EAAE0B,OAAOO,cACXJ,EAAc7B,EAAE0B,OAAOC,QAAQZ,IAC/Bf,EAAE0B,OAAOO,YAAc,QAEI,SAAzBjC,EAAE0B,OAAOO,cACXnC,EAAUoC,UAAUC,OAAO,mBAC3BnC,EAAE0B,OAAOO,YAAc,OACvBnC,EAAUM,MAAQJ,EAAE0B,OAAOU,uBAAuBH,mB","file":"main.a3056711d4a509c1a7e4.js","sourcesContent":["import './styles.css';\r\nimport axios from 'axios';\r\n\r\nconst messageForm = document.forms.messageForm;\r\nconst list = document.querySelector('.list');\r\nconst editInput = document.querySelector('.editInput');\r\n\r\n// const createMessage = e => {\r\n//   e.preventDefault();\r\n//   const message = messageForm.elements.message.value;\r\n\r\n//   axios\r\n//     .post('https://chat-a4dc0.firebaseio.com/messenger.json', {\r\n//       message: message,\r\n//     })\r\n//     .then(response => console.log(response.data));\r\n//   messageForm.reset();\r\n// };\r\n\r\n//! или с помощью асинхронной функции:\r\n\r\nconst createMessage = async e => {\r\n  e.preventDefault();\r\n  const message = messageForm.elements.message.value;\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://chat-a4dc0.firebaseio.com/messenger.json',\r\n      {\r\n        message: message,\r\n      },\r\n    );\r\n    console.log('create', response.data);\r\n  } catch (arror) {\r\n    console.log(error);\r\n  } finally {\r\n    getMessage();\r\n    // console.log('It is OK');\r\n  }\r\n\r\n  messageForm.reset();\r\n};\r\n\r\nmessageForm.addEventListener('submit', createMessage);\r\n\r\nconst getMessage = async id => {\r\n  const response = await axios.get(\r\n    'https://chat-a4dc0.firebaseio.com/messenger.json',\r\n  );\r\n  if (response.data !== null) {\r\n    const data = Object.keys(response.data).map(id => {\r\n      return { id, ...response.data[id] };\r\n    }); // []\r\n    console.log(data);\r\n\r\n    const markup = data.reduce((acc, item) => {\r\n      return (acc += `\r\n        <li className='listItem'>\r\n        <span className='spanItem'>${item.message}</span>\r\n        <button className='editButton' data-button = 'edit' data-id=${item.id}>Edit</button>\r\n        <button className='delButton' data-button = 'delete' data-id=${item.id}>Delete</button>\r\n        </li>\r\n        `);\r\n    }, '');\r\n    list.innerHTML = markup;\r\n  } else list.innerHTML = `<li><span>No messages</span></li>`;\r\n};\r\n\r\nconst deleteMessage = async e => {\r\n  if (e.target.dataset === 'BUTTON') {\r\n    const id = e.target.dataset.id;\r\n    try {\r\n      await axios.delete(\r\n        `https://chat-a4dc0.firebaseio.com/messenger/${id}.json`,\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      getMessage();\r\n    }\r\n  }\r\n};\r\n\r\nconst updateMessage = async (id, text) => {\r\n  const message = editInput.value;\r\n\r\n  try {\r\n    await axios.patch(\r\n      `https://chat-a4dc0.firebaseio.com/messenger/${id}.json`,\r\n      { message },\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n  } finally {\r\n    getMessage();\r\n    editInput.value = '';\r\n  }\r\n};\r\n\r\nconst actions = e => {\r\n  if (e.target.dataset.button === 'delete') {\r\n    deleteMessage(e.target.dataset.id);\r\n  }\r\n  if (e.target.dataset.button === 'edit') {\r\n    if (e.target.textContent === 'Save') {\r\n      updateMessage(e.target.dataset.id);\r\n      e.target.textContent = 'Edit';\r\n    }\r\n    if (e.target.textContent === 'Edit') {\r\n      editInput.classList.toggle('editInputActive');\r\n      e.target.textContent = 'Save';\r\n      editInput.value = e.target.previousElementSibling.textContent;\r\n    }\r\n  }\r\n};\r\n\r\ngetMessage();\r\nlist.addEventListener('click', actions);\r\n"],"sourceRoot":""}